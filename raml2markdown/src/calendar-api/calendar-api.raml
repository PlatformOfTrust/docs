#%RAML 1.0
---
title: Calendar
version: v1
baseUri: https://api-sandbox.oftrust.net
mediaType: application/json
description: |
  The calendar API provides means to create calendar entries to identities.
  You can e.g. create an event for a housing company identity, a reservation
  to a room identity, or just a regular calendar entry to any identity you want.<br/>

  The calendar entry requires a `"to"`-identity, the ID of the identity to which
  the calendar entry applies to. Specify a type for the entry, e.g.
  `Event`, `Reservation`, `CalendarEntry`. Give the calendar entry a title, e.g.
  "Housewarming party", a start date, when the entry starts, and an end date
  when the entry ends. The dates are in RFC3339 format, and will be saved in UTC
  time. <br/>

  You can specify if an entry repeats, as defined in ISO 8601 repeating
  intervals. A location can be added as well, if needed, as a string, e.g.
  "Living room".<br/>

  The `cc` is a list of user IDs to whom the calendar entry can be CC'd to.
  A notification about the entry will be sent to these users.
types:
  calendar:
    type: object
    properties:
      toIdentity:
        description: The "to" identity ID to which the calendar is created for.
        type: string
        example: d36c4cd0-26c9-446e-a93f-0a90029f3a7f
      type:
        description: The type of the calendar entry.
        type: string
        example: Event
      title:
        description: The title of the calendar entry
        type: string
        example: April fool's day festivities.
      startDate:
        description: The start date of the calendar entry in RFC3339 format.
        type: datetime
        example: 2019-04-01T15:00:00+00:00
      endDate:
        description: The end date of the calendar entry in RFC3339 format.
        type: datetime
        example: 2019-04-01T18:00:00+00:00
      repeats?:
        description: |
          Whether the calendar entry repeats or not. As defined in ISO 8601
          repeating intervals. E.g. Repeat the interval of "P1Y2M10DT2H30M"
          five times starting at "2008-03-01T13:00:00Z",
          use "R5/2008-03-01T13:00:00Z/P1Y2M10DT2H30M".
        type: string
        example: R5/2008-03-01T13:00:00Z/P1Y2M10DT2H30M
      content?:
        description: The text body of the calendar entry.
        type: string
        example: April fool's event, held on the courtyard.
      location?:
        description: The location of the calendar entry
        type: string
        example: Courtyard at Teststreet 12
      cc?:
        description: List of IDs to CC the message to.
        type: array
        example: |
          [
            "323bde80-4cc2-472e-bb77-e6a3e95a1253",
            "0827e9c3-9664-479f-b0ec-956a35d72e4b"
          ]
/calendars/{version}:
  description: |
    Manage calendars of identities. A calendar entry can be sent to any identity the user
    has access to.
  post:
    headers:
      Authorization: !include ../authorization-headers.yaml
    description: Create a new calendar entry
    body:
      type: calendar
      example: !include includes/examples/calendar-create.json
    responses:
      201:
        body:
          properties: !include includes/properties/calendar.yaml
          example: !include includes/examples/calendar.json
      422:
        body:
          example: |
            {
              "error": {
                "status": 422,
                "message": "Could not create calendar."
              }
            }
  /{id}:
    description: Read, update and delete calendars of an identity.
    uriParameters:
      id:
        description: The ID of the calendar
        type: string
        example: 2584bdd7-1cb2-48ed-a106-2a1b817cf909
    get:
      headers:
        Authorization: !include ../authorization-headers.yaml
      description: Read one calendar by id
      responses:
        200:
          body:
            properties: !include includes/properties/calendar.yaml
            example: !include includes/examples/calendar.json
        404:
          body:
            example: !include includes/examples/calendar-not-found.json
    put:
      headers:
        Authorization: !include ../authorization-headers.yaml
      description: Update a calendar by id
      body:
        type: calendar
        example: !include includes/examples/calendar-update.json
      responses:
        200:
          body:
            properties: !include includes/properties/calendar.yaml
            example: !include includes/examples/calendar.json
        404:
          body:
            example: !include includes/examples/calendar-not-found.json
        422:
          body:
            example: |
              {
                "error": {
                  "status": 422,
                  "message": "Could not update calendar."
                }
              }
    delete:
      headers:
        Authorization: !include ../authorization-headers.yaml
      description: Delete a calendar by id
      responses:
        204:
          body:
            example: {}
        404:
          body:
            example: !include includes/examples/calendar-not-found.json
  /{toIdentity}:
    uriParameters:
      toIdentity:
        description: The identity to which the calendar belongs to.
        type: string
        example: 2584bdd7-1cb2-48ed-a106-2a1b817cf909
    /list:
      description: List all calendars belonging to an identity.
      get:
        headers:
          Authorization: !include ../authorization-headers.yaml
        description: List calendars created for "to"-identity.
        responses:
          200:
            body:
              properties: !include includes/properties/calendars.yaml
              example: !include includes/examples/calendars.json
